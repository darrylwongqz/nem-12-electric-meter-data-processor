version: '3.8'
services:
  backend:
    build:
      context: ./backend
    container_name: backend
    ports:
      - '8000:8000'
    depends_on:
      - db
      - redis
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/meter_data
      - REDIS_URL=redis://redis:6379/0
      - IGNORE_FLAGGED=False
    volumes:
      - ./backend:/app

  worker:
    build:
      context: ./backend
    container_name: worker
    command: celery -A app.tasks.celery_app.celery_app worker --loglevel=info
    depends_on:
      - db
      - redis
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/meter_data
      - REDIS_URL=redis://redis:6379/0
      - IGNORE_FLAGGED=False
    volumes:
      - ./backend:/app

  db:
    image: postgres:13
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: meter_data
    ports:
      - '5432:5432'
    volumes:
      - db_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - '5050:80'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - db

  redis:
    image: redis:6
    container_name: redis
    restart: always
    ports:
      - '6379:6379'

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    ports:
      - '3000:3000'
    depends_on:
      - backend
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:8000/api

volumes:
  db_data:
  pgadmin_data:
